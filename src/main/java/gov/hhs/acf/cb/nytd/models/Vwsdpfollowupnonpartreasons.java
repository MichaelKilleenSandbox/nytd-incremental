package gov.hhs.acf.cb.nytd.models;

import gov.hhs.acf.cb.nytd.models.helper.SDPTextChartRow;
import lombok.Getter;
import lombok.Setter;

import java.util.ArrayList;
import java.util.List;



// Generated Aug 27, 2013 1:27:37 AM by Hibernate Tools 3.4.0.CR1

/**
 * Vwsdpfollowupnonpartreasons generated by hbm2java
 */
public class Vwsdpfollowupnonpartreasons implements java.io.Serializable {

	@Getter @Setter private long fid;
	@Getter @Setter private long fstatereportid;
	@Getter @Setter private String fyouthdeclined;
	@Getter @Setter private String fparentdeclined;
	@Getter @Setter private String fincapacitated;
	@Getter @Setter private String fincarcerated;
	@Getter @Setter private String frunawaymissing;
	@Getter @Setter private String funablelocate;
	@Getter @Setter private String fnotInSample;
	@Getter @Setter private String fdeath;
	@Getter @Setter private String ffostercaretype;
	@Getter @Setter private String dyouthdeclined;
	@Getter @Setter private String dparentdeclined;
	@Getter @Setter private String dincapacitated;
	@Getter @Setter private String dincarcerated;
	@Getter @Setter private String drunawaymissing;
	@Getter @Setter private String dunablelocate;
	@Getter @Setter private String ddeath;
	@Getter @Setter private String dnotInSample;
	@Getter @Setter private String dfostercaretype;
	@Getter @Setter private List<SDPTextChartRow> nonParticipationReasons;

	public Vwsdpfollowupnonpartreasons() {
	}

	public Vwsdpfollowupnonpartreasons(long fid) {
		this.fid = fid;
	}

	public Vwsdpfollowupnonpartreasons(long fid,
			long fstatereportid, String fyouthdeclined,
			String fparentdeclined, String fincapacitated,
			String fincarcerated, String frunawaymissing, String funablelocate,
			String fdeath,String fnotInSample, String ffostercaretype, String dyouthdeclined,
			String dparentdeclined, String dincapacitated,
			String dincarcerated, String drunawaymissing, String dunablelocate,
			String ddeath,String dnotInSample, String dfostercaretype) {
		this.fid = fid;
		this.fstatereportid = fstatereportid;
		this.fyouthdeclined = fyouthdeclined;
		this.fparentdeclined = fparentdeclined;
		this.fincapacitated = fincapacitated;
		this.fincarcerated = fincarcerated;
		this.frunawaymissing = frunawaymissing;
		this.funablelocate = funablelocate;
		this.fdeath = fdeath;
		this.fnotInSample = fnotInSample;
		this.ffostercaretype = ffostercaretype;
		this.dyouthdeclined = dyouthdeclined;
		this.dparentdeclined = dparentdeclined;
		this.dincapacitated = dincapacitated;
		this.dincarcerated = dincarcerated;
		this.drunawaymissing = drunawaymissing;
		this.dunablelocate = dunablelocate;
		this.dnotInSample = dnotInSample;
		this.ddeath = ddeath;
		this.dfostercaretype = dfostercaretype;
	}
	
	public void generateNonParticipationReasonsChart()
	{
		swapValues();
		NVL();
		nonParticipationReasons = new ArrayList<SDPTextChartRow>();
		nonParticipationReasons.add(new SDPTextChartRow("Youth declined", fyouthdeclined, dyouthdeclined));
		nonParticipationReasons.add(new SDPTextChartRow("Parent declined", fparentdeclined, dparentdeclined));
	//	nonParticipationReasons.add(new SDPTextChartRow("Parent declined", fparentdeclined, dparentdeclined));
		nonParticipationReasons.add(new SDPTextChartRow("Incapacitated", fincapacitated, dincapacitated));
		nonParticipationReasons.add(new SDPTextChartRow("Incarcerated", fincarcerated,dincarcerated));
		nonParticipationReasons.add(new SDPTextChartRow("Runaway or missing", frunawaymissing, drunawaymissing));
		nonParticipationReasons.add(new SDPTextChartRow("Unable to locate/invite", funablelocate, dunablelocate));
		nonParticipationReasons.add(new SDPTextChartRow("Death", fdeath, ddeath));
		nonParticipationReasons.add(new SDPTextChartRow("Not in sample", fnotInSample, dnotInSample));
		
		
	}
	
	private void NVL()
	{
		if (fyouthdeclined == null) { fyouthdeclined = "N/A"; };
		if (fparentdeclined == null) { fparentdeclined = "N/A"; };
		if (fincapacitated == null) { fincapacitated = "N/A"; };
		if (fincarcerated == null) { fincarcerated = "N/A"; };
		if (frunawaymissing == null) { frunawaymissing = "N/A"; };
		if (funablelocate == null) { funablelocate = "N/A"; };
		if (fnotInSample == null) { fnotInSample = "N/A"; };
		if (fdeath == null) { fdeath = "N/A"; };
		if (dyouthdeclined == null) { dyouthdeclined = "N/A"; };
		if (dparentdeclined == null) { dparentdeclined = "N/A"; };
		if (dincapacitated == null) { dincapacitated = "N/A"; };
		if (dincarcerated == null) { dincarcerated = "N/A"; };
		if (drunawaymissing == null) { drunawaymissing = "N/A"; };
		if (dunablelocate == null) { dunablelocate = "N/A"; };
		if (ddeath == null) { ddeath = "N/A"; };
		if (dnotInSample == null) { dnotInSample = "N/A"; };

	}
	
	private void swapValues()
	{
		String dummy = null;
		if(ffostercaretype != null && ffostercaretype.equalsIgnoreCase("out"))
		{
			dummy = fyouthdeclined; fyouthdeclined = dyouthdeclined; dyouthdeclined = dummy;
			dummy = fparentdeclined; fparentdeclined = dparentdeclined; dparentdeclined = dummy;
			dummy = fincapacitated; fincapacitated = dincapacitated; dincapacitated = dummy;
			dummy = fincarcerated; fincarcerated = dincarcerated; dincarcerated = dummy;
			dummy = frunawaymissing; frunawaymissing = drunawaymissing; drunawaymissing = dummy;
			dummy = funablelocate; funablelocate = dunablelocate; dunablelocate = dummy;
			dummy = fdeath; fdeath = ddeath; ddeath = dummy;
			dummy = fnotInSample; fnotInSample = dnotInSample; dnotInSample = dummy;
		}
	}

}
